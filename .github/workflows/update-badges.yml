name: Update Shields.io Badges when dependencies change
on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:
jobs:
  update-badges:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          
      - name: Get package versions
        id: get-versions
        run: |
          echo "FASTIFY_VERSION=$(jq -r '.dependencies["fastify"] // .devDependencies["fastify"]' package.json)" >> $GITHUB_ENV
          echo "PRISMA_VERSION=$(jq -r '.dependencies["@prisma/client"] // .devDependencies["prisma"]' package.json)" >> $GITHUB_ENV
          echo "VITEST_VERSION=$(jq -r '.dependencies["vitest"] // .devDependencies["vitest"]' package.json)" >> $GITHUB_ENV
          echo "SUPERTEST_VERSION=$(jq -r '.dependencies["supertest"] // .devDependencies["@types/supertest"]' package.json)" >> $GITHUB_ENV
          echo "BCRYPTJS_VERSION=$(jq -r '.dependencies["bcryptjs"] // .devDependencies["@types/bcryptjs"]' package.json)" >> $GITHUB_ENV
          echo "DAYJS_VERSION=$(jq -r '.dependencies["dayjs"] // .devDependencies["dayjs"]' package.json)" >> $GITHUB_ENV
          echo "ZOD_VERSION=$(jq -r '.dependencies["zod"] // .devDependencies["zod"]' package.json)" >> $GITHUB_ENV
          echo "ESLINT_VERSION=$(jq -r '.dependencies["eslint"] // .devDependencies["eslint"]' package.json)" >> $GITHUB_ENV
          echo "DOTENV_VERSION=$(jq -r '.dependencies["dotenv"] // .devDependencies["dotenv"]' package.json)" >> $GITHUB_ENV

      - name: Generate Badges Content
        id: generate-badges
        run: |
          echo "[![Fastify](https://img.shields.io/badge/Fastify-${{ env.FASTIFY_VERSION }}-blue?style=flat-square&logo=fastify)](https://www.fastify.io/)" > badges_content.txt
          echo "[![Prisma](https://img.shields.io/badge/Prisma-${{ env.PRISMA_VERSION }}-orange?style=flat-square&logo=prisma)](https://www.prisma.io/)" >> badges_content.txt
          echo "[![Vitest](https://img.shields.io/badge/Vitest-${{ env.VITEST_VERSION }}-red?style=flat-square)](https://github.com/vitejs/vitest)" >> badges_content.txt
          echo "[![supertest](https://img.shields.io/badge/supertest-${{ env.SUPERTEST_VERSION }}-orange?style=flat-square)](https://github.com/visionmedia/supertest)" >> badges_content.txt
          echo "[![bcryptjs](https://img.shields.io/badge/bcryptjs-${{ env.BCRYPTJS_VERSION }}-blue?style=flat-square)](https://github.com/dcodeIO/bcrypt.js)" >> badges_content.txt
          echo "[![dayjs](https://img.shields.io/badge/dayjs-${{ env.DAYJS_VERSION }}-yellow?style=flat-square)](https://github.com/iamkun/dayjs)" >> badges_content.txt
          echo "[![Zod](https://img.shields.io/badge/Zod-${{ env.ZOD_VERSION }}-green?style=flat-square)](https://github.com/colinhacks/zod)" >> badges_content.txt
          echo "[![eslint](https://img.shields.io/badge/eslint-${{ env.ESLINT_VERSION }}-blue?style=flat-square&logo=eslint)](https://eslint.org/)" >> badges_content.txt
          echo "[![dotenv](https://img.shields.io/badge/dotenv-${{ env.DOTENV_VERSION }}-yellow?style=flat-square)](https://github.com/motdotla/dotenv)" >> badges_content.txt

      - name: Update README badges
        run: |
          badges=$(cat badges_content.txt)
          awk -v badges="$badges" '
            BEGIN { badge_section = 0 }
            /<!-- BADGES_START -->/ { badge_section = 1; print; print badges; next }
            /<!-- BADGES_END -->/ { badge_section = 0 }
            !badge_section { print }
          ' README.md > updated_README.md
          mv updated_README.md README.md

      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add README.md
          git commit -m "chore: update badges with latest package versions"
          git push
